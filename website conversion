import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import scipy.stats

df = pd.read_csv("C:/Users/783/Desktop/ab_data.csv",  parse_dates = ['timestamp'], sep=(','))
df

# видим что некоторые пользователи с контрольной группы увидели новую страницу и также с тестовой группой
df \
    .groupby(['group', 'landing_page']) \
    .agg({'user_id': 'count', 'timestamp': 'count', 'converted': 'count'})
    
    df_cleaned = df \
    .loc[(df.group == 'control') & (df.landing_page == 'old_page') | (df.group == 'treatment') & (df.landing_page == 'new_page')]
df_cleaned \
    .groupby(['group','landing_page']).count()
    
    #проверяем уникальных пользователей
df_cleaned.user_id.nunique()

# и сравниваем со всего пользователей
# видим, что один пользователь повторяется
df_cleaned.shape[0]

# удаляем нашего единственного пользователя, который два раза видел нашу страницу
#удалили второй экземпляр пользователя
df_cleaned = df.drop_duplicates(subset = 'user_id', keep="first")
df_cleaned.shape[0]

# строим график, который отражает конверсию по группам
groups = df_cleaned.groupby(['group', 'landing_page', 'converted']).size()
groups.plot.bar()

#проверяем различия количества конверсии новой и старой страниц
df_cleaned.landing_page.value_counts().plot.pie()

# отобрали данные с двух групп 
a = df_cleaned.query('group == "control"')
b = df_cleaned.query('group == "treatment"')

# посчитали конверсию в а и б
a_click = a.converted.sum()
a_no_click = a.converted.size - a.converted.sum()
b_click = b.converted.sum()
b_no_click = b.converted.size - b.converted.sum()

# строим массив
massiv = np.array([[a_click, a_no_click], [b_click, b_no_click]])

#считаем расчетное значение p
# нулевая гипотеза предполагает, что связи между наблюдениями не существует.
#Предполагая уровень значимости 5%, мы можем сделать вывод, что p-значение больше, чем альфа, и что мы не отвергаем
#нулевую гипотезу. Проще говоря, конверсии между старой и новой веб-страницей не имеют значения.

print(scipy.stats.chi2_contingency(massiv, correction = False)[1])
# 22% > 5% ур. значимости, следовательнно мы отвергаем нулевую гипотезу.

# расчитаем значения конверсии чтобы проверить правильность построенной модели
# показатели конверсии почти одинаковые, поэтому выводы модели правильные.
a_CTR = a_click / (a_click + a_no_click)
b_CTR = b_click / (b_click + b_no_click)
print(a_CTR, b_CTR)
